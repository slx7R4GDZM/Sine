// Copyright slx7R4GDZM
// Distributed under the terms of the MIT License.
// Refer to the License.txt file for details.

#pragma once

#include "../Other/Common_Things.h"

const u16 COPYRIGHT_SYMBOL[] = {0xA080, 0x0190, 0xF100, 0xF672, 0xF072, 0xF272, 0xF270, 0xF276, 0xF076, 0xF676, 0xF670, 0xF902, 0xF076, 0xF670, 0xF072, 0xFD02, 0xD000};

const u16 EXPLOSION_1[] = {0xFA08, 0xF57A, 0xF17A, 0xF67D, 0xF679, 0xF67D, 0xF679, 0xF17E, 0xF57E, 0xF17E, 0xF57E, 0xF279, 0xF27D, 0xF279, 0xF27D, 0xF57A, 0xF17A, 0xD000};
const u16 EXPLOSION_2[] = {0xFA08, 0xF579, 0xF07A, 0xF678, 0xF579, 0xF57D, 0xF678, 0xF07E, 0xF57D, 0xF17D, 0xF07E, 0xF278, 0xF17D, 0xF179, 0xF278, 0xF07A, 0xF179, 0xD000};
const u16 EXPLOSION_3[] = {0xF308, 0xF579, 0xF17A, 0xF67D, 0xF579, 0xF57D, 0xF679, 0xF17E, 0xF57D, 0xF17D, 0xF57E, 0xF279, 0xF17D, 0xF179, 0xF27D, 0xF57A, 0xF179, 0xD000};
const u16 EXPLOSION_4[] = {0xF308, 0xF57A, 0xF679, 0xF67D, 0xF57E, 0xF17E, 0xF27D, 0xF279, 0xF17A, 0xD000};

const u16 ASTEROID_1[] = {0xF208, 0xF27A, 0xF67A, 0xF67D, 0xF679, 0xF67E, 0xF17F, 0xF57D, 0xF37E, 0xF278, 0xF37A, 0xF67A, 0xD000};
const u16 ASTEROID_2[] = {0xFA09, 0xF67A, 0xFE78, 0xF07F, 0xF679, 0xF07F, 0xF27F, 0xF178, 0xF27B, 0xF07F, 0xF178, 0xF27B, 0xF07B, 0xD000};
const u16 ASTEROID_3[] = {0xF208, 0xF279, 0xF079, 0xF67A, 0xF77D, 0xF579, 0xF67E, 0xF87E, 0xF27E, 0xF378, 0xF37B, 0xF679, 0xD000};
const u16 ASTEROID_4[] = {0xF308, 0xF17A, 0xF77A, 0xF778, 0xF67E, 0xF07D, 0xF27D, 0xF67E, 0xF27E, 0xF379, 0xF17D, 0xF27A, 0xF57A, 0xD000};

const u16 SAUCER[] = {0xF30D, 0xF0CA, 0xFECA, 0xF6CF, 0xF8CE, 0xF2CF, 0xFACA, 0xF60E, 0xF8CB, 0xF60A, 0x9000, 0xC450, 0xD000};

const u8 SHIP_OFFSET_TABLE[] =
{
    0x00,
    0x0A,
    0x19,
    0x28,
    0x37,
    0x46,
    0x55,
    0x64,
    0x73,
    0x82,
    0x91,
    0xA0,
    0xAF,
    0xBE,
    0xCD,
    0xDC,
    0xEB
};

const u16 SHIP_TABLE[] =
{
    0xF40E, 0xFECE, 0xFCCB, 0x9020, 0xC038, 0x9020, 0xC438, 0xFCCF, 0xFECA, 0xD000,
    0x9402, 0x0410, 0x9423, 0xC41D, 0x9005, 0xC030, 0x9025, 0xC035, 0x901A, 0xC43B, 0x9405, 0xC430, 0x941D, 0xC023, 0xD000,
    0x9403, 0x0410, 0x9426, 0xC419, 0x9009, 0xC02F, 0x902A, 0xC031, 0x9014, 0xC43D, 0x9409, 0xC42F, 0x9419, 0xC026, 0xD000,
    0x9405, 0x040F, 0x9428, 0xC415, 0x900E, 0xC02E, 0x902F, 0xC02C, 0x900E, 0xC43F, 0x940E, 0xC42E, 0x9415, 0xC028, 0xD000,
    0x9406, 0x040F, 0x942A, 0xC411, 0x9012, 0xC02C, 0x9033, 0xC027, 0x9008, 0xC440, 0x9412, 0xC42C, 0x9411, 0xC02A, 0xD000,
    0x9408, 0x040E, 0x942B, 0xC40D, 0x9017, 0xC02A, 0x9037, 0xC022, 0x9002, 0xC440, 0x9417, 0xC42A, 0x940D, 0xC02B, 0xD000,
    0x9409, 0x040D, 0x942C, 0xC409, 0x901B, 0xC028, 0x903A, 0xC01D, 0x9405, 0xC440, 0x941B, 0xC428, 0x9409, 0xC02C, 0xD000,
    0x940A, 0x040C, 0x942D, 0xC404, 0x901E, 0xC025, 0x903C, 0xC017, 0x940B, 0xC440, 0x941E, 0xC425, 0x9404, 0xC02D, 0xD000,
    0x940B, 0x040B, 0x942D, 0xC000, 0x9022, 0xC022, 0x903E, 0xC011, 0x9411, 0xC43E, 0x9422, 0xC422, 0x9400, 0xC02D, 0xD000,
    0x940C, 0x040A, 0x942D, 0xC004, 0x9025, 0xC01E, 0x9040, 0xC00B, 0x9417, 0xC43C, 0x9425, 0xC41E, 0x9004, 0xC02D, 0xD000,
    0x940D, 0x0409, 0x942C, 0xC009, 0x9028, 0xC01B, 0x9040, 0xC005, 0x941D, 0xC43A, 0x9428, 0xC41B, 0x9009, 0xC02C, 0xD000,
    0x940E, 0x0408, 0x942B, 0xC00D, 0x902A, 0xC017, 0x9040, 0xC402, 0x9422, 0xC437, 0x942A, 0xC417, 0x900D, 0xC02B, 0xD000,
    0x940F, 0x0406, 0x942A, 0xC011, 0x902C, 0xC012, 0x9040, 0xC408, 0x9427, 0xC433, 0x942C, 0xC412, 0x9011, 0xC02A, 0xD000,
    0x940F, 0x0405, 0x9428, 0xC015, 0x902E, 0xC00E, 0x903F, 0xC40E, 0x942C, 0xC42F, 0x942E, 0xC40E, 0x9015, 0xC028, 0xD000,
    0x9410, 0x0403, 0x9426, 0xC019, 0x902F, 0xC009, 0x903D, 0xC414, 0x9431, 0xC42A, 0x942F, 0xC409, 0x9019, 0xC026, 0xD000,
    0x9410, 0x0402, 0x9423, 0xC01D, 0x9030, 0xC005, 0x903B, 0xC41A, 0x9435, 0xC425, 0x9430, 0xC405, 0x901D, 0xC023, 0xD000,
    0xF608, 0xFECA, 0xFBC8, 0x9038, 0xC420, 0x9438, 0xC420, 0xFFC8, 0xFACA, 0xD000
};

const u8 SHIP_THRUST_OFFSET_TABLE[] =
{
    0x00,
    0x04,
    0x0B,
    0x12,
    0x19,
    0x1F,
    0x26,
    0x2D,
    0x34,
    0x3B,
    0x42,
    0x49,
    0x50,
    0x56,
    0x5D,
    0x64,
    0x6B
};

const u16 SHIP_THRUST_TABLE[] =
{
    0xF60E, 0xF2CF, 0xF2CB, 0xD000,
    0x9411, 0x040E, 0x900E, 0xC419, 0x9012, 0xC016, 0xD000,
    0x9413, 0x040D, 0x900B, 0xC41B, 0x9014, 0xC014, 0xD000,
    0x9414, 0x040B, 0x9008, 0xC41C, 0x9016, 0xC012, 0xD000,
    0x9415, 0x0409, 0x9006, 0xC41C, 0xF3CA, 0xD000,
    0x9416, 0x0407, 0x9003, 0xC41D, 0x9019, 0xC00E, 0xD000,
    0x9416, 0x0404, 0x9400, 0xC41D, 0x901B, 0xC00B, 0xD000,
    0x9417, 0x0402, 0x9403, 0xC41D, 0x901C, 0xC008, 0xD000,
    0x9417, 0x0000, 0x9406, 0xC41C, 0x901C, 0xC006, 0xD000,
    0x9417, 0x0002, 0x9408, 0xC41C, 0x901D, 0xC003, 0xD000,
    0x9416, 0x0004, 0x940B, 0xC41B, 0x901D, 0xC000, 0xD000,
    0x9416, 0x0007, 0x940E, 0xC419, 0x901D, 0xC403, 0xD000,
    0x9415, 0x0009, 0xF6CF, 0x901C, 0xC406, 0xD000,
    0x9414, 0x000B, 0x9412, 0xC416, 0x901C, 0xC408, 0xD000,
    0x9413, 0x000D, 0x9414, 0xC414, 0x901B, 0xC40B, 0xD000,
    0x9411, 0x000E, 0x9416, 0xC412, 0x9019, 0xC40E, 0xD000,
    0xF60A, 0xF7CE, 0xF3CE, 0xD000
};

const u16 LIVES_REMAINING_SHIP[] = {0xF608, 0xFE7A, 0xFB78, 0x9038, 0x7420, 0x9438, 0x7420, 0xFF78, 0xFA7A, 0x9010, 0x0040, 0xD000};

const u8 CHARACTER_OFFSET_TABLE[] =
{
    0x00, // Space
    0x02, // 0
    0x0B,
    0x10,
    0x18,
    0x20,
    0x27,
    0x2E,
    0x35,
    0x3A,
    0x44, // 9
    0x4B, // A
    0x52,
    0x5A,
    0x62,
    0x69,
    0x71,
    0x77,
    0x7F,
    0x86,
    0x8D,
    0x93,
    0x9A,
    0x9F,
    0xA5,
    0x02, // O
    0xAA,
    0xB1,
    0xBA,
    0xC2,
    0xC9,
    0xCF,
    0xD6,
    0xDB,
    0xE2,
    0xE7,
    0xEE // Z
};

const u16 CHARACTER_TABLE[] =
{
    0xF803, 0xD000, // Space
    0xF003, 0xF371, 0xF375, 0xF076, 0xF775, 0xF771, 0xF072, 0xF003, 0xD000, // 0
    0xF001, 0xFB71, 0xFF00, 0xF003, 0xD000,
    0xFB00, 0xF073, 0xF671, 0xF577, 0xF775, 0xF872, 0xF002, 0xD000,
    0xF073, 0xF371, 0xF375, 0xF077, 0xF701, 0xF073, 0xF702, 0xD000,
    0xF002, 0xFB71, 0xF007, 0xF775, 0xF872, 0xF702, 0xD000,
    0xF073, 0xF371, 0xF876, 0xF371, 0xF073, 0xFF01, 0xD000,
    0xFB71, 0xF705, 0xF073, 0xF775, 0xF077, 0xF803, 0xD000,
    0xFB00, 0xF872, 0xFF75, 0xF802, 0xD000,
    0xF872, 0xF375, 0xF371, 0xF876, 0xF771, 0xF775, 0xF301, 0xF072, 0xF703, 0xD000,
    0xF002, 0xFB71, 0xF077, 0xF775, 0xF073, 0xF703, 0xD000, // 9
    0xFB71, 0xFF71, 0xF305, 0xF076, 0xF703, 0xF002, 0xD000, // A
    0xFB70, 0xF872, 0xFF70, 0xF876, 0xF301, 0xF073, 0xF702, 0xD000,
    0xFB02, 0xF076, 0xF676, 0xF670, 0xF672, 0xF072, 0xF002, 0xD000,
    0xFB70, 0xF072, 0xF772, 0xF776, 0xF076, 0xF803, 0xD000,
    0xF802, 0xF876, 0xFB70, 0xF872, 0xF707, 0xF073, 0xF702, 0xD000,
    0xFB70, 0xF872, 0xF707, 0xF073, 0xF702, 0xD000,
    0xF302, 0xF072, 0xF770, 0xF876, 0xFB70, 0xF872, 0xFF01, 0xD000,
    0xFB70, 0xF700, 0xF872, 0xF700, 0xFB70, 0xFF01, 0xD000,
    0xF872, 0xFB00, 0xF876, 0xF002, 0xFF70, 0xF802, 0xD000,
    0xF200, 0xF672, 0xF072, 0xFB70, 0xFF01, 0xD000,
    0xFB70, 0xF802, 0xFE76, 0xF101, 0xF773, 0xF002, 0xD000,
    0xFB70, 0xFF00, 0xF872, 0xF002, 0xD000,
    0xFB70, 0xF772, 0xF372, 0xFF70, 0xF002, 0xD000,
    0xFB70, 0xFF72, 0xFB70, 0xFF01, 0xD000,
    // O
    0xFB70, 0xF872, 0xF770, 0xF077, 0xF703, 0xF002, 0xD000,
    0xF300, 0xF372, 0xF772, 0xF776, 0xF376, 0xF002, 0xF772, 0xF002, 0xD000,
    0xFB70, 0xF872, 0xF770, 0xF077, 0xF001, 0xF772, 0xF002, 0xD000,
    0xF073, 0xF171, 0xFA76, 0xF171, 0xF073, 0xFF01, 0xD000,
    0xF801, 0xFB70, 0xF006, 0xF872, 0xFF01, 0xD000,
    0xFB00, 0xFE70, 0xF672, 0xF072, 0xFB70, 0xFF01, 0xD000,
    0xFB00, 0xFF71, 0xFB71, 0xFF01, 0xD000,
    0xFB00, 0xFF70, 0xF372, 0xF772, 0xFB70, 0xFF01, 0xD000,
    0xFB72, 0xF806, 0xFF72, 0xF002, 0xD000,
    0xFB02, 0xF776, 0xF376, 0xF702, 0xF770, 0xF802, 0xD000,
    0xFB72, 0xF876, 0xFF00, 0xF872, 0xF002, 0xD000 // Z
};

const u16 PHOTON[] = {0xF0F0, 0xD000};
const u16 UNDERSCORE[] = {0xF872, 0xF801, 0xD000};
const u16 DOT[] = {0xF040, 0xD000};
